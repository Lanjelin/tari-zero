name: Check and Build Latest tari suite

on:
  schedule:
    - cron: "0 3 * * *"  # Every day at 03:00 UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest tari version
        id: version
        run: |
          latest=$(curl -s https://api.github.com/repos/tari-project/tari/releases/latest \
            | jq -r .tag_name)

          echo "tari_tag=$latest" >> $GITHUB_OUTPUT
          echo "version=${latest#v}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and Push if updated
        run: |
          IMAGE=ghcr.io/lanjelin/tari-zero
          VERSION=${{ steps.version.outputs.version }}
          TAG=${{ steps.version.outputs.tari_tag }}

          # Check if tag already exists
          if curl --silent --fail -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            "https://ghcr.io/v2/lanjelin/tari-zero/manifests/$TAG" > /dev/null; then
            echo "Image already exists for $TAG. Skipping build."
            exit 0
          fi

          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          docker buildx build \
            --label org.opencontainers.image.created="$BUILD_DATE" \
            --build-arg TARI_TAG=$TAG \
            --tag $IMAGE:$TAG \
            --tag $IMAGE:latest \
            --label org.opencontainers.image.version="$TAG" \
            --push .

