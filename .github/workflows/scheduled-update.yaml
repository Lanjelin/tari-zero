name: Check and Build Latest tari suite

on:
  schedule:
    - cron: "0 3 * * *"  # Every day at 03:00 UTC
  workflow_dispatch:

env:
  GHCR_NAME: "lanjelin/tari-zero"
  APP_NAME: "tari"
  APP_RELEASE_URL: "https://api.github.com/repos/tari-project/tari/releases/latest"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest ${{ env.APP_NAME }} version
        id: version
        run: |
          latest=$(curl -s ${{ env.APP_RELEASE_URL }} \
            | jq -r .tag_name)

          echo "latest_tag=$latest" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and Push if updated
        run: |
          IMAGE=ghcr.io/${{ env.GHCR_NAME }}
          TAG=${{ steps.version.outputs.latest_tag }}
          COMMIT_HASH=$(curl -fsSL "https://api.github.com/repos/tari-project/tari/tags" | jq -r ".[] | select(.name==\"$TAG\").commit.sha[:7]")

          # Check if tag already exists
          if docker manifest inspect $IMAGE:$TAG > /dev/null 2>&1; then
            echo "Image already exists for $TAG. Skipping build."
            exit 0
          fi

          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          docker buildx build \
            --label org.opencontainers.image.created="$BUILD_DATE" \
            --build-arg BUILD_TAG=$TAG \
            --build-arg COMMIT_HASH=$COMMIT_HASH \
            --tag $IMAGE:$TAG \
            --tag $IMAGE:latest \
            --label org.opencontainers.image.version="$TAG" \
            --push .

